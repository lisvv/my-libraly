version: '3.8'

services:

  backend:
    build: .
    command: sh -c "cd my_library \
                    && python3 manage.py migrate \
                    && python3 manage.py load_fixtures \
                    && python3 manage.py collectstatic --noinput \
                    && gunicorn --bind 0.0.0.0:8000 my_library.wsgi:application"
    restart: always
    volumes:
      - static_volume:/code/my_library/static/
    expose:
      - "8000"
    env_file:
      - ./.env.example
    depends_on:
      - db

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    restart: always
    ports:
    - "5432:5432"

  redis:
    image: redis:6.2.6-alpine
    command: redis-server --requirepass redis123
    volumes:
      - redis-data:/var/lib/redis
    depends_on:
      - db
    ports:
      - "6379:6379"

  celery:
    build: .
    command: sh -c "cd my_library \
             && celery -A my_library worker -l INFO"
    volumes:
      - ./my_library/static:/code/backend/static
    depends_on:
      - redis
      - db
    env_file:
      - ./.env.example

  celery-beat:
    build: .
    command: sh -c "cd my_library \
             && celery -A my_library beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - redis
      - db
      - celery
    env_file:
      - ./.env.example

  nginx:
    image: nginx:1.19.3
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/usr/share/nginx/html/static
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    restart: always
    depends_on:
      - db

volumes:
  postgres_data:
  redis-data:
  static_volume:
